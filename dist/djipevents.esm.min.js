class t{constructor(t=!1){this.map={},this.suspended=1==t}addListener(r,n,i={}){if("string"!=typeof r&&!(r instanceof String)&&r!==t.ANY_EVENT)throw new TypeError("The 'event' parameter must be a string or EventEmitter.ANY_EVENT.");if("function"!=typeof n)throw new TypeError("The callback must be a function.");const s=new e(r,this,n,i);return this.map[r]||(this.map[r]=[]),i.prepend?this.map[r].unshift(s):this.map[r].push(s),s}on(t,e,r={}){return this.addListener(t,e,r)}once(t,e,r={}){return r.remaining=1,this.addListener(t,e,r)}static get ANY_EVENT(){return Symbol.for("Any event")}hasListener(e){return void 0===e?!!(this.map[t.ANY_EVENT]&&this.map[t.ANY_EVENT].length>0)||Object.entries(this.map).some(([,t])=>t.length>0):!!(this.map[e]&&this.map[e].length>0)}get eventNames(){return Object.keys(this.map)}getListeners(t){return this.map[t]||[]}suspend(t){this.getListeners(t).forEach(t=>{t.suspended=!0})}unsuspend(t){this.getListeners(t).forEach(t=>{t.suspended=!1})}getListenerCount(t){return this.getListeners(t).length}emit(e,...r){if("string"!=typeof e&&!(e instanceof String))throw new TypeError("The 'event' parameter must be a string.");if(this.suspended)return;let n=[],i=this.map[t.ANY_EVENT]||[];return this.map[e]&&(i=i.concat(this.map[e])),i.forEach(t=>{if(t.suspended)return;let e=[...r];Array.isArray(t.args)&&(e=e.concat(t.args)),t.remaining>0&&(n.push(t.callback.apply(t.context,e)),t.count++),--t.remaining<1&&t.remove()}),n}removeListener(t,e,r={}){if(!t)return void(this.map={});if(!this.map[t])return;let n=this.map[t].filter(t=>e&&t.callback!==e||r.remaining&&r.remaining!==t.remaining||r.context&&r.context!==t.context);n.length?this.map[t]=n:delete this.map[t]}off(t,e,r={}){return this.removeListener(t,e,r)}get eventCount(){return Object.keys(this.map).length}}class e{constructor(e,r,n,i={}){if("string"!=typeof e&&!(e instanceof String)&&e!==t.ANY_EVENT)throw new TypeError("The 'event' parameter must be a string or EventEmitter.ANY_EVENT.");if(!r)throw new ReferenceError("The 'target' parameter is mandatory.");if("function"!=typeof n)throw new TypeError("The 'callback' must be a function.");void 0===i.args||Array.isArray(i.args)||(i.args=[i.args]),(i=Object.assign({context:r,remaining:1/0,args:void 0,duration:1/0},i)).duration!==1/0&&setTimeout(()=>this.remove(),i.duration),this.event=e,this.target=r,this.callback=n,this.context=i.context,this.remaining=parseInt(i.remaining)>=1?parseInt(i.remaining):1/0,this.count=0,this.args=i.args,this.suspended=!1}remove(){this.target.removeListener(this.event,this.callback,{context:this.context,remaining:this.remaining})}}export{t as EventEmitter,e as Listener};
//# sourceMappingURL=djipevents.esm.min.js.map
