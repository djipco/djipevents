class t{constructor(){this.events={},this.suspended=!1}on(t,s,n={}){if("function"!=typeof s)throw new TypeError("The callback must be a function");const i={context:this,duration:1/0,data:void 0,prepend:!1,times:1/0};n=Object.assign({},i,n);const h=new e(t,this,s,n);return n.duration!==1/0&&setTimeout(()=>h.remove(),n.duration),this.events[t]||(this.events[t]=[]),n.prepend?this.events[t].unshift(h):this.events[t].push(h),h}hasListener(t){return!!(this.events[t]&&this.events[t].length>0)}get eventNames(){return Object.keys(this.events)}getListeners(t){return this.events[t]||[]}suspend(t){this.getListeners(t).forEach(t=>{t.suspended=!0})}unsuspend(t){this.getListeners(t).forEach(t=>{t.suspended=!1})}getListenerCount(t){return this.getListeners(t).length}emit(t,e){if(!this.events[t]||this.suspended)return;let s=[];return this.events[t].forEach(t=>{t.suspended||(t.times>0&&(void 0!==e?s.push(t.callback.call(t.context,e,t.data)):s.push(t.callback.call(t.context,t.data))),--t.times<1&&t.remove())}),s}once(t,e,s={}){return s.times=1,this.on(t,e,s)}off(t,e,s={}){if(!this.events[t])return;let n=this.events[t].filter(t=>e&&t.callback!==e||s.times&&s.times!==t.times||s.context&&s.context!==t.context);n.length?this.events[t]=n:delete this.events[t]}removeAllListeners(){this.events={}}get eventCount(){return Object.keys(this.events).length}}class e{constructor(t,e,s,n={}){const i={context:this,times:1/0,data:void 0};n=Object.assign({},i,n),this.event=t,this.target=e,this.callback=s,this.context=n.context,this.times=n.times,this.data=n.data,this.suspended=!1}remove(){this.target.off(this.event,this.callback,{context:this.context,times:this.times})}}export{t as EventEmitter,e as Listener};
