class t{constructor(){this.map={},this.suspended=!1}on(t,s,n={}){if("function"!=typeof s)throw new TypeError("The callback must be a function");const i={context:this,count:1/0,data:void 0,duration:1/0,prepend:!1};n=Object.assign({},i,n);const a=new e(t,this,s,n);return n.duration!==1/0&&setTimeout(()=>a.remove(),n.duration),this.map[t]||(this.map[t]=[]),n.prepend?this.map[t].unshift(a):this.map[t].push(a),a}once(t,e,s={}){return s.count=1,this.on(t,e,s)}static get ANY_EVENT(){return Symbol.for("Any event")}hasListener(t){return!!(this.map[t]&&this.map[t].length>0)}get eventNames(){return Object.keys(this.map)}getListeners(t){return this.map[t]||[]}suspend(t){this.getListeners(t).forEach(t=>{t.suspended=!0})}unsuspend(t){this.getListeners(t).forEach(t=>{t.suspended=!1})}getListenerCount(t){return this.getListeners(t).length}emit(e,s){if(!this.map[e]||this.suspended)return;let n=[],i=this.map[t.ANY_EVENT]||[];return this.map[e]&&(i=i.concat(this.map[e])),i.forEach(t=>{t.suspended||(t.count>0&&(void 0!==s?n.push(t.callback.call(t.context,s,t.data)):n.push(t.callback.call(t.context,t.data))),--t.count<1&&t.remove())}),n}off(t,e,s={}){if(!t)return void(this.map={});if(!this.map[t])return;let n=this.map[t].filter(t=>e&&t.callback!==e||s.count&&s.count!==t.count||s.context&&s.context!==t.context);n.length?this.map[t]=n:delete this.map[t]}get eventCount(){return Object.keys(this.map).length}}class e{constructor(t,e,s,n={}){const i={context:this,count:1/0,data:void 0};n=Object.assign({},i,n),this.event=t,this.target=e,this.callback=s,this.context=n.context,this.count=n.count,this.data=n.data,this.suspended=!1}remove(){this.target.off(this.event,this.callback,{context:this.context,count:this.count})}}export{t as EventEmitter,e as Listener};
//# sourceMappingURL=djipevents.esm.min.js.map
